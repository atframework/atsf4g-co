// cmake template file, this file is generated by cmake, please don't edit it

#include "config/server_frame_build_feature.h"

#cmakedefine SERVER_FRAME_VCS_COMMIT u8"@SERVER_FRAME_VCS_COMMIT@"
#cmakedefine SERVER_FRAME_VCS_VERSION u8"@SERVER_FRAME_VCS_VERSION@"
#cmakedefine SERVER_FRAME_VCS_COMMIT_SHA u8"@SERVER_FRAME_VCS_COMMIT_SHA@"
#cmakedefine SERVER_FRAME_VCS_COMMIT_SHORT_SHA u8"@SERVER_FRAME_VCS_COMMIT_SHORT_SHA@"
#cmakedefine SERVER_FRAME_VCS_SERVER_BRANCH u8"@SERVER_FRAME_VCS_SERVER_BRANCH@"
#cmakedefine SERVER_FRAME_PROJECT_CONFIGURE_VERSION u8"@SERVER_FRAME_PROJECT_CONFIGURE_VERSION@"
#cmakedefine SERVER_FRAME_PROJECT_USER_BUSSINESS_VERSION u8"@SERVER_FRAME_PROJECT_USER_BUSSINESS_VERSION@"

#ifdef SERVER_FRAME_VCS_COMMIT
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_commit() { return (const char*)SERVER_FRAME_VCS_COMMIT; }
#else
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_commit() { return (const char*)u8"VCS COMMIT NOT FOUND"; }
#endif

#ifdef SERVER_FRAME_VCS_VERSION
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_version() { return (const char*)SERVER_FRAME_VCS_VERSION; }
#else
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_version() { return (const char*)u8"VCS VERSION NOT FOUND"; }
#endif

#ifdef SERVER_FRAME_VCS_COMMIT_SHA
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_commit_sha() {
  return (const char*)SERVER_FRAME_VCS_COMMIT_SHA;
}
#else
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_commit_sha() {
  return (const char*)u8"VCS COMMIT SHA NOT FOUND";
}
#endif

#ifdef SERVER_FRAME_VCS_COMMIT_SHORT_SHA
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_commit_short_sha() {
  return (const char*)SERVER_FRAME_VCS_COMMIT_SHORT_SHA;
}
#else
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_commit_short_sha() {
  return (const char*)u8"VCS COMMIT SHORT SHA NOT FOUND";
}
#endif

#ifdef SERVER_FRAME_VCS_SERVER_BRANCH
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_server_branch() {
  return (const char*)SERVER_FRAME_VCS_SERVER_BRANCH;
}
#else
SERVER_FRAME_CONFIG_API const char* server_frame_vcs_get_server_branch() {
  return (const char*)u8"VCS SERVER BRANCH NOT FOUND";
}
#endif

#ifdef SERVER_FRAME_PROJECT_CONFIGURE_VERSION
SERVER_FRAME_CONFIG_API const char* server_frame_project_get_version() {
  return (const char*)SERVER_FRAME_PROJECT_CONFIGURE_VERSION;
}
#else
SERVER_FRAME_CONFIG_API const char* server_frame_project_get_version() { return (const char*)u8"0.1.0"; }
#endif

#ifdef SERVER_FRAME_PROJECT_USER_BUSSINESS_VERSION
SERVER_FRAME_CONFIG_API const char* server_frame_get_user_bussiness_version() {
  return (const char*)SERVER_FRAME_PROJECT_USER_BUSSINESS_VERSION;
}
#else
SERVER_FRAME_CONFIG_API const char* server_frame_get_user_bussiness_version() { return (const char*)u8"0.0.0.0"; }
#endif
