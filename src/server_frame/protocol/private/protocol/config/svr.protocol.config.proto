syntax = "proto3";

option optimize_for = SPEED;
// option optimize_for = LITE_RUNTIME;
// option optimize_for = CODE_SIZE;
// --cpp_out=lite:,--cpp_out=
option cc_enable_arenas = true;

package hello.config;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

import "atframe/atapp_conf.proto";

message logic_server_shared_component_cfg {
  bool task_manager = 101 [(atapp.protocol.CONFIGURE) = { default_value: "true" }];
  bool router_manager_set = 102 [(atapp.protocol.CONFIGURE) = { default_value: "true" }];
  bool session_manager = 103 [(atapp.protocol.CONFIGURE) = { default_value: "false" }];
  bool excel_config = 104 [(atapp.protocol.CONFIGURE) = { default_value: "false" }];
}

message logic_server_cfg {
  int64 open_service_time = 101;
  bool maintenance_mode = 102;
  string resource_path = 103 [(atapp.protocol.CONFIGURE) = { default_value: "../../resource" }];
  string log_path = 104 [(atapp.protocol.CONFIGURE) = { default_value: "../log" }];
  google.protobuf.Timestamp reload_timepoint = 105;

  logic_server_shared_component_cfg shared_component = 106;
}

message logic_user_async_job_cfg {
  google.protobuf.Duration timeout = 101 [(atapp.protocol.CONFIGURE) = { default_value: "30s" min_value: "5" }];
  google.protobuf.Duration interval = 102 [(atapp.protocol.CONFIGURE) = { default_value: "10m" min_value: "60" }];

  google.protobuf.Duration conflict_checking_timeout = 201
      [(atapp.protocol.CONFIGURE) = { default_value: "30m" min_value: "5" }];
  uint32 conflict_checking_queue_size = 202 [(atapp.protocol.CONFIGURE) = { default_value: "1000" min_value: "1" }];
  uint32 retry_queue_size = 203 [(atapp.protocol.CONFIGURE) = { default_value: "100" min_value: "1" }];
  int32 default_retry_times = 204 [(atapp.protocol.CONFIGURE) = { default_value: "3" min_value: "0" }];
}

message logic_user_cfg {
  uint64 max_online = 101 [(atapp.protocol.CONFIGURE) = { default_value: "50000" }];
  string default_openid = 102 [(atapp.protocol.CONFIGURE) = { default_value: "gm://system" }];
  logic_user_async_job_cfg async_job = 103;
}

message logic_session_cfg {
  google.protobuf.Duration login_code_protect = 101 [(atapp.protocol.CONFIGURE) = { default_value: "20m" }];
  google.protobuf.Duration login_code_valid_sec = 102 [(atapp.protocol.CONFIGURE) = { default_value: "10m" }];
  google.protobuf.Duration login_ban_time = 103 [(atapp.protocol.CONFIGURE) = { default_value: "3h" }];
  google.protobuf.Duration tick_sec = 104 [(atapp.protocol.CONFIGURE) = { default_value: "60s" }];
  bool enable_actor_log = 105 [(atapp.protocol.CONFIGURE) = { default_value: "false" }];
  bool enable_actor_otel_log = 106 [(atapp.protocol.CONFIGURE) = { default_value: "false" }];
  bool remove_player_cache_when_stop = 107 [(atapp.protocol.CONFIGURE) = { default_value: "true" }];
  uint64 actor_log_size = 108 [(atapp.protocol.CONFIGURE) = { default_value: "1MB" size_mode: true }];
  uint64 actor_log_rotate = 109 [(atapp.protocol.CONFIGURE) = { default_value: "3" min_value: "1" }];
}

message logic_task_stack_cfg {
  uint64 size = 101 [(atapp.protocol.CONFIGURE) = { default_value: "512KB" size_mode: true }];
  uint64 gc_once_number = 102 [(atapp.protocol.CONFIGURE) = { default_value: "10" min_value: "1" }];
  uint64 pool_max_count = 103 [(atapp.protocol.CONFIGURE) = { default_value: "25000" min_value: "1" }];
  uint64 pool_min_count = 104 [(atapp.protocol.CONFIGURE) = { default_value: "64" }];
  uint64 mmap_count = 105 [
    (atapp.protocol.CONFIGURE) = { default_value: "60000" min_value: "200" }
  ];  // sys mmap configure(linux: only, >=busy_count*2+keep_count)
  uint64 busy_count = 106 [(atapp.protocol.CONFIGURE) = { default_value: "20000" min_value: "1" }];
  uint64 keep_count = 107 [(atapp.protocol.CONFIGURE) = { default_value: "10000" min_value: "100" }];
  uint64 busy_warn_count = 108 [(atapp.protocol.CONFIGURE) = { default_value: "15000" min_value: "100" }];
}

message logic_task_stats_cfg {
  google.protobuf.Duration interval = 101 [(atapp.protocol.CONFIGURE) = { default_value: "60s" min_value: "1s" }];
  bool enable_internal_pstat_log = 102 [(atapp.protocol.CONFIGURE) = { default_value: "true" }];
}

message logic_task_type_cfg {
  google.protobuf.Duration timeout = 101 [(atapp.protocol.CONFIGURE) = { default_value: "8s" min_value: "1s" }];
}

message logic_task_cfg {
  logic_task_type_cfg csmsg = 101;
  logic_task_type_cfg nomsg = 102;
  logic_task_type_cfg paymsg = 103;
  logic_task_type_cfg warn = 104;

  logic_task_stats_cfg stats = 201;
  logic_task_stack_cfg stack = 301;
}

message logic_heartbeat_cfg {
  google.protobuf.Duration interval = 101;
  google.protobuf.Duration tolerance = 102;
  uint32 error_times = 103;
  uint32 ban_error_times = 104;
  google.protobuf.Duration ban_time_bound = 105;
}

message logic_router_cfg {
  google.protobuf.Duration cache_update_interval = 101
      [(atapp.protocol.CONFIGURE) = { default_value: "1800s" min_value: "1s" }];
  google.protobuf.Duration cache_free_timeout = 102
      [(atapp.protocol.CONFIGURE) = { default_value: "600s" min_value: "1s" }];
  google.protobuf.Duration cache_retry_interval = 103
      [(atapp.protocol.CONFIGURE) = { default_value: "256ms" min_value: "1ms" }];
  google.protobuf.Duration object_free_timeout = 104
      [(atapp.protocol.CONFIGURE) = { default_value: "1500s" min_value: "1s" }];
  google.protobuf.Duration object_save_interval = 105
      [(atapp.protocol.CONFIGURE) = { default_value: "600s" min_value: "1s" }];
  google.protobuf.Duration object_retry_interval = 106
      [(atapp.protocol.CONFIGURE) = { default_value: "256ms" min_value: "1ms" }];
  google.protobuf.Duration default_timer_interval = 107
      [(atapp.protocol.CONFIGURE) = { default_value: "300s" min_value: "10s" }];
  google.protobuf.Duration fast_timer_interval = 108
      [(atapp.protocol.CONFIGURE) = { default_value: "10s" min_value: "1s" }];
  uint32 retry_max_ttl = 109 [(atapp.protocol.CONFIGURE) = { default_value: "3" min_value: "1" }];
  uint64 pending_action_batch_count = 110 [(atapp.protocol.CONFIGURE) = { default_value: "200" min_value: "1" }];
  uint64 pending_action_max_count = 111 [(atapp.protocol.CONFIGURE) = { default_value: "2000" min_value: "1" }];
  uint64 closing_action_batch_count = 112 [(atapp.protocol.CONFIGURE) = { default_value: "500" min_value: "1" }];
  uint32 transfer_max_ttl = 113 [(atapp.protocol.CONFIGURE) = { default_value: "128" min_value: "1" }];
}

message opentelemetry_exporter_otlp_header {
  string key = 1;
  string value = 2;
}

message opentelemetry_exporter_otlp_grpc {
  string endpoint = 11;
  bool insecure = 12 [(atapp.protocol.CONFIGURE) = { default_value: "true" }];
  string ca_file = 13;
  google.protobuf.Duration timeout = 14 [(atapp.protocol.CONFIGURE) = { default_value: "5s" min_value: "16ms" }];
  repeated opentelemetry_exporter_otlp_header headers = 15;
}

message opentelemetry_exporter_otlp_http {
  string endpoint = 11;
  google.protobuf.Duration timeout = 12 [(atapp.protocol.CONFIGURE) = { default_value: "5s" min_value: "16ms" }];
  repeated opentelemetry_exporter_otlp_header headers = 14;
  uint32 max_concurrent_requests = 15;
  uint32 max_requests_per_connection = 16;
}

message opentelemetry_trace_exporter_cfg {
  opentelemetry_exporter_otlp_grpc otlp_grpc = 1;
  opentelemetry_exporter_otlp_http otlp_http = 2;
  string ostream = 3;  // Just for debug
}

message opentelemetry_simple_processor_cfg {}

message opentelemetry_batch_processor_cfg {
  google.protobuf.Duration timeout = 1 [(atapp.protocol.CONFIGURE) = { default_value: "5s" min_value: "1s" }];
  uint64 send_batch_size = 2 [(atapp.protocol.CONFIGURE) = { default_value: "512" min_value: "1" }];
  uint64 send_batch_max_size = 3 [(atapp.protocol.CONFIGURE) = { default_value: "2048" min_value: "1" }];
}

message opentelemetry_processor_cfg {
  opentelemetry_simple_processor_cfg simple = 1;
  opentelemetry_batch_processor_cfg batch = 2;
}

message opentelemetry_sampler_cfg {
  oneof sampler_type {
    bool always_on = 1;
    bool always_off = 2;
    double trace_id_ratio = 3;
  }
}

message opentelemetry_trace_cfg {
  string default_name = 1;
  string schema_url = 2 [(atapp.protocol.CONFIGURE) = { default_value: "https://opentelemetry.io/schemas/1.12.0" }];
  map<string, string> resource = 3;
  string additional_metrics_name = 4;
  bool enable_additional_metrics = 5;

  opentelemetry_trace_exporter_cfg exporters = 11;
  opentelemetry_processor_cfg processors = 12;
  opentelemetry_sampler_cfg samplers = 13;
}

message opentelemetry_exporter_prometheus_pull {
  string url = 1;
}

message opentelemetry_exporter_prometheus_push {
  string host = 1;
  string port = 2 [(atapp.protocol.CONFIGURE) = { default_value: "80" }];
  string jobname = 3;
  map<string, string> labels = 4;
  string username = 5;
  string password = 6;
}

message opentelemetry_exporter_prometheus_file {
  string file_pattern = 1;
  string alias_pattern = 2;
  google.protobuf.Duration flush_interval = 3 [(atapp.protocol.CONFIGURE) = { default_value: "1s" }];
  uint64 flush_count = 4 [(atapp.protocol.CONFIGURE) = { default_value: "128" }];
  uint64 file_size = 5 [(atapp.protocol.CONFIGURE) = { default_value: "20MB" size_mode: true }];
  uint32 rotate_size = 6 [(atapp.protocol.CONFIGURE) = { default_value: "3" }];
}

message opentelemetry_exporter_prometheus_http_api {
  string url = 1;
  repeated opentelemetry_exporter_otlp_header headers = 2;
}

message opentelemetry_metrics_exporter_cfg {
  opentelemetry_exporter_otlp_grpc otlp_grpc = 1;
  opentelemetry_exporter_otlp_http otlp_http = 2;
  string ostream = 3;  // Just for debug

  opentelemetry_exporter_prometheus_pull prometheus_pull = 11;
  opentelemetry_exporter_prometheus_push prometheus_push = 12;
  opentelemetry_exporter_prometheus_file prometheus_file = 13;
  opentelemetry_exporter_prometheus_http_api prometheus_http_api = 14;
}

message opentelemetry_metrics_reader_cfg {
  google.protobuf.Duration export_interval = 1
      [(atapp.protocol.CONFIGURE) = { default_value: "10s" min_value: "16ms" }];
  google.protobuf.Duration export_timeout = 2 [(atapp.protocol.CONFIGURE) = { default_value: "8s" min_value: "16ms" }];
}

message opentelemetry_metrics_cfg {
  string default_name = 1;
  string schema_url = 2 [(atapp.protocol.CONFIGURE) = { default_value: "https://opentelemetry.io/schemas/1.12.0" }];
  map<string, string> resource = 3;
  opentelemetry_metrics_reader_cfg reader = 4;

  opentelemetry_metrics_exporter_cfg exporters = 11;
}

message opentelemetry_logs_exporter_cfg {
  opentelemetry_exporter_otlp_grpc otlp_grpc = 1;
  opentelemetry_exporter_otlp_http otlp_http = 2;
  string ostream = 3;  // Just for debug
}

message opentelemetry_logs_cfg {
  string default_name = 1;
  string schema_url = 2 [(atapp.protocol.CONFIGURE) = { default_value: "https://opentelemetry.io/schemas/1.12.0" }];
  map<string, string> resource = 3;

  opentelemetry_logs_exporter_cfg exporters = 11;
  opentelemetry_processor_cfg processors = 12;
}

message opentelemetry_cfg {
  map<string, string> resource = 2;
  opentelemetry_trace_cfg trace = 3;
  opentelemetry_metrics_cfg metrics = 4;
  opentelemetry_logs_cfg logs = 5;
}

message opentelemetry_agent_cfg {
  bool enable_trace = 31;
  opentelemetry_trace_exporter_cfg trace_exporters = 32;
  bool enable_metrics = 41;
  opentelemetry_metrics_exporter_cfg metrics_exporters = 42;
  opentelemetry_metrics_reader_cfg metrics_readers = 43;
  bool enable_logs = 51;
  opentelemetry_logs_exporter_cfg logs_exporters = 52;
}

message opentelemetry_group_cfg {
  string name = 1;
  opentelemetry_cfg configure = 2;
  opentelemetry_agent_cfg agent = 3;
}

message logic_telemetry_cfg {
  opentelemetry_cfg opentelemetry = 1;
  opentelemetry_agent_cfg agent = 2;
  repeated opentelemetry_group_cfg group = 3;
}

message logic_discovery_selector_cfg {
  atapp.protocol.atapp_metadata dtcoordsvr = 270;
}

// @see
// https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/horizontal-pod-autoscaler-v1/#HorizontalPodAutoscalerSpec
message logic_hpa_target {
  string kind = 1;
  string name = 2;
  string api_version = 3;
}

message logic_hpa_ssl {
  // @see https://curl.haxx.se/libcurl/c/curl_easy_setopt.html
  bool enable_alpn = 1;  // CURLOPT_SSL_ENABLE_ALPN
  bool verify_peer = 2;  // CURLOPT_SSL_VERIFYPEER, CURLOPT_SSL_VERIFYHOST, CURLOPT_SSL_VERIFYSTATUS
                         // and CURLOPT_PROXY_SSL_VERIFYPEER, CURLOPT_PROXY_SSL_VERIFYHOST

  string ssl_min_version = 101;  // CURLOPT_SSLVERSION and CURLOPT_PROXY_SSLVERSION

  string ssl_client_cert = 111;              // CURLOPT_SSLCERT
  string ssl_client_cert_type = 112;         // CURLOPT_SSLCERTTYPE: PEM or DER
  string ssl_client_key = 113;               // CURLOPT_SSLKEY
  string ssl_client_key_type = 114;          // CURLOPT_SSLKEYTYPE: PEM, DER or ENG
  string ssl_client_key_passwd = 115;        // CURLOPT_KEYPASSWD or CURLOPT_SSLCERTPASSWD
  string ssl_ca_cert = 116;                  // CURLOPT_CAINFO
  string ssl_client_tlsauth_username = 117;  // CURLOPT_TLSAUTH_USERNAME
  string ssl_client_tlsauth_password = 118;  // CURLOPT_TLSAUTH_PASSWORD

  string ssl_proxy_cert = 121;              // CURLOPT_PROXY_SSLCERT
  string ssl_proxy_cert_type = 122;         // CURLOPT_PROXY_SSLCERTTYPE: PEM or DER
  string ssl_proxy_key = 123;               // CURLOPT_PROXY_SSLKEY
  string ssl_proxy_key_type = 124;          // CURLOPT_PROXY_SSLKEYTYPE: PEM, DER or ENG
  string ssl_proxy_key_passwd = 125;        // CURLOPT_PROXY_KEYPASSWD or CURLOPT_PROXY_SSLCERTPASSWD
  string ssl_proxy_ca_cert = 126;           // CURLOPT_PROXY_CAINFO
  string ssl_proxy_tlsauth_username = 127;  // CURLOPT_PROXY_TLSAUTH_USERNAME
  string ssl_proxy_tlsauth_password = 128;  // CURLOPT_PROXY_TLSAUTH_PASSWORD

  string ssl_cipher_list = 201;        // CURLOPT_SSL_CIPHER_LIST
  string ssl_cipher_list_tls13 = 202;  // CURLOPT_TLS13_CIPHERS
}

message logic_hpa_pull_request {
  bool debug_mode = 1;
  google.protobuf.Duration timeout = 2 [(atapp.protocol.CONFIGURE) = { default_value: "10s" }];
  google.protobuf.Duration keepalive_timeout = 3 [(atapp.protocol.CONFIGURE) = { default_value: "600s" }];
  google.protobuf.Duration connect_timeout = 4 [(atapp.protocol.CONFIGURE) = { default_value: "0ms" }];
  google.protobuf.Duration dns_cache_timeout = 5 [(atapp.protocol.CONFIGURE) = { default_value: "900s" }];
  string dns_servers = 6;
  string user_agent = 7 [(atapp.protocol.CONFIGURE) = { default_value: "Atapp HPA module/1.0" }];
  string proxy = 8;
  string no_proxy = 9;
  string proxy_user_name = 10;
  string proxy_password = 11;
}

message logic_hpa_metrics {
  // 只有开启了才会启用HPA控制管理模块
  bool enable = 1;

  // 拉取指标的间隔
  google.protobuf.Duration pull_interval = 2 [(atapp.protocol.CONFIGURE) = { default_value: "180s" min_value: "1s" }];
  // 拉取指标的请求配置
  logic_hpa_pull_request pull_request = 3;
  // 拉取指标的SSL配置
  logic_hpa_ssl pull_ssl = 4;

  // 指标的公共附加写出标签
  //   建议提取 workload的namespace和name作为写出标签以支持多版本和蓝绿发布
  map<string, string> labels = 5;

  // 指标的公共附加读规则标签
  //   selector默认为=操作符，可以手动设置为 =,!=,=~或!~
  //   详见: https://prometheus.io/docs/prometheus/latest/querying/basics/#instant-vector-selectors
  //   建议提取 workload的namespace和name作为筛选标签以支持多版本和蓝绿发布
  map<string, string> selectors = 6;

  // 以下selectors不自动追加,否则某些内置筛选规则会自动添加到选择器列表里
  // （默认情况下会自动设置 service_namespace, service_name, deployment_environment, hpa_target_kind, hpa_target_name,
  // hpa_target_api_version 。job属性由于会被exporter重置所以不作为自动添加属性）
  repeated string without_auto_selectors = 7;

  // 写出预期Pod数的指标名（External指标）
  string metrics_name_expect_replicas = 11;

  // 写出状态Pod Index的指标名（External指标）
  string metrics_name_stateful_index = 12;
}

enum logic_hpa_policy_aggregation_operator {
  EN_HPA_POLICY_AGGREGATION_NONE = 0 [(atapp.protocol.ENUMVALUE) = { alias_name: "none" }];
  EN_HPA_POLICY_AGGREGATION_SUM = 1 [(atapp.protocol.ENUMVALUE) = { alias_name: "sum" }];
  EN_HPA_POLICY_AGGREGATION_AVG = 2 [(atapp.protocol.ENUMVALUE) = { alias_name: "avg" }];
  EN_HPA_POLICY_AGGREGATION_COUNT = 3 [(atapp.protocol.ENUMVALUE) = { alias_name: "count" }];
  EN_HPA_POLICY_AGGREGATION_MIN = 4 [(atapp.protocol.ENUMVALUE) = { alias_name: "min" }];
  EN_HPA_POLICY_AGGREGATION_MAX = 5 [(atapp.protocol.ENUMVALUE) = { alias_name: "max" }];
  EN_HPA_POLICY_AGGREGATION_COUNT_VALUES = 6 [(atapp.protocol.ENUMVALUE) = { alias_name: "count_values" }];
  EN_HPA_POLICY_AGGREGATION_TOPK = 11 [(atapp.protocol.ENUMVALUE) = { alias_name: "topk" }];
  EN_HPA_POLICY_AGGREGATION_BOTTOMK = 12 [(atapp.protocol.ENUMVALUE) = { alias_name: "bottomk" }];
}

message logic_hpa_policy_aggregation_group_by {
  repeated string labels = 1;
}

message logic_hpa_policy_aggregation_count_values {
  string as = 1;
}

message logic_hpa_policy_aggregation_parameter {
  oneof aggregation_parameter_type {
    logic_hpa_policy_aggregation_group_by by = 1;
    logic_hpa_policy_aggregation_group_by without = 2;
    int32 k = 3;
    logic_hpa_policy_aggregation_count_values count_values = 4;
  }
}

// @see https://prometheus.io/docs/prometheus/latest/querying/functions/
message logic_hpa_policy_simple_function {
  oneof function_type {
    // https://prometheus.io/docs/prometheus/latest/querying/functions/#rate
    google.protobuf.Duration rate = 1;
    // https://prometheus.io/docs/prometheus/latest/querying/functions/#irate
    google.protobuf.Duration irate = 2;
    // https://prometheus.io/docs/prometheus/latest/querying/functions/#increase
    google.protobuf.Duration increase = 3;
    // https://prometheus.io/docs/prometheus/latest/querying/functions/#aggregation_over_time
    google.protobuf.Duration avg_over_time = 11;
    google.protobuf.Duration min_over_time = 12;
    google.protobuf.Duration max_over_time = 13;
    google.protobuf.Duration sum_over_time = 14;
    google.protobuf.Duration count_over_time = 15;
    google.protobuf.Duration last_over_time = 16;
  }
}

enum logic_hpa_policy_metrics_type {
  EN_HPA_POLICY_METRICS_TYPE_GAUGE = 0 [(atapp.protocol.ENUMVALUE) = { alias_name: "gauge" }];
  EN_HPA_POLICY_METRICS_TYPE_COUNTER = 1 [(atapp.protocol.ENUMVALUE) = { alias_name: "counter" }];
}

message logic_hpa_policy {
  string metrics_name = 1;

  string metrics_unit = 2;

  string metrics_description = 3;

  logic_hpa_policy_metrics_type metrics_type = 4;

  logic_hpa_policy_aggregation_operator aggregation = 11;

  logic_hpa_policy_aggregation_parameter aggregation_parameter = 12;

  repeated logic_hpa_policy_simple_function simple_function = 13;

  // 指标的额外附加写出标签
  map<string, string> labels = 14;

  // 指标的额外附加读规则标签
  //   selector默认为=操作符，可以手动设置为 =,!=,=~或!~
  //   详见: https://prometheus.io/docs/prometheus/latest/querying/basics/#instant-vector-selectors
  map<string, string> selectors = 15;

  // 以下selectors不自动追加,否则某些内置筛选规则会自动添加到选择器列表里
  repeated string without_auto_selectors = 16;

  // 不设置query时，由metrics_name,aggregation,aggregation_parameter和selectors自动生成 query
  string query = 21;

  // 扩容指标目标值(0为不设置并由业务层自己控制)
  int64 scaling_up_value = 31;

  // 缩容指标目标值（一般小于等于扩容指标目标值,0为不设置并由业务层自己控制）
  int64 scaling_down_value = 32;
}

message logic_hpa_scaling_configure {
  // 稳定时间
  google.protobuf.Duration stabilization_window = 1;
  // 一次扩缩容最大变更节点数
  int32 max_scaling_count = 2;
}

message logic_hpa_scaling_rule {
  logic_hpa_scaling_configure scaling_up_configure = 1;
  logic_hpa_scaling_configure scaling_down_configure = 2;

  // CPU: 千分比
  logic_hpa_policy cpu_permillage = 11;
  // 内存: 字节
  logic_hpa_policy memory = 12;

  // 自定义指标
  repeated logic_hpa_policy custom = 21;
}

// This is use to maintain configure status in ETCD or other storage system.
message logic_hpa_status {
  // 当前副本数
  int32 current_replicas = 1;
  // 期望的副本数
  int32 expect_replicas = 2;
  // 期望的副本数据开始迁移时间
  google.protobuf.Timestamp expect_replicate_start_timepoint = 3;
  // 期望的副本数据结束迁移时间
  google.protobuf.Timestamp expect_replicate_end_timepoint = 4;
  // 期望的开始调整副本时间
  google.protobuf.Timestamp expect_scaling_timepoint = 5;
}

message logic_hpa_controller {
  // 只有开启了这里还有 metrics.enable 才会启用HPA控制管理模块
  bool enable = 1;

  // 指向ETCD配置的Key前缀，实际生效值应为
  // <configure_key>/<controller.selector.hpa_target_kind>/<controller.selector.hpa_target_api_version>/<controller.selector.hpa_target_name>
  // 写入的数据结构为 logic_hpa_status
  string configure_key = 2;

  // 按服务类型ID限定管理节点查找规则
  uint64 type_id = 3;
  // 按服务类型名限定管理节点查找规则
  string type_name = 4;

  // 选取管理节点的选取规则(K8S的目标仅仅能使用kind,name和apiVersion，建议只用这几项)
  // 建议:
  //   1. 上面 type_id/type_name 仅用于加速查找。实际workload控制仅仅使用 selector.hpa_target_name
  //   2.1 对于无小区服务 selector.hpa_target_name = <type_name>-<版本号>,
  //   2.2 对于有小区服务 selector.hpa_target_name = <type_name>-<zone_id>-<版本号>
  logic_hpa_target target = 5;

  // 服务发现层的附加标签(也会写入指标)
  map<string, string> discovery_labels = 6;

  // 发布场景:
  //   蓝绿发布时，老版本可以通过外部指令通知controller把预期节点数强行写0。
  //   服务器发现层设置非active状态排除后续状态数据迁入。
  //   然后等待状态数据全部迁移完成后通知prometheus状态数变化。
  // 节点迁移场景:
  //   服务器发现层设置非active状态排除后续状态数据迁入。
  //   然后等待状态数据全部迁移完成后直接本地停止，等同index的pod节点在新节点上拉起。
  int32 min_replicas = 7;
  int32 max_replicas = 8;

  // 等待多久后开始副本迁移(此时间后如果节点即将下线，设置 hpa_scaling_target="false", 保持 hpa_ready="true")
  google.protobuf.Duration replicate_start_delay = 11;
  // 预期副本迁移时间(此时间后如果节点即将下线，设置 hpa_ready="false"，可以清空本地数据，后续RPC全部透明转发）
  google.protobuf.Duration replicate_period = 12;
  // 等待多久后开始节点变更(此时间后如果节点即将下线，开始stop流程)
  google.protobuf.Duration scaling_delay = 13;
}

// HPA相关的策略路由选择器
message logic_hpa_discovery_group_cfg {
  // 就绪状态的HPA选择器（对应标签: hpa_ready="true"，初始节点总是ready状态）
  logic_discovery_selector_cfg ready = 1;
  // 下一次Scaling后仍在线的HPA选择器（对应标签:
  // hpa_scaling_target="true"。如果Scaling后节点即将离线，hpa_scaling_target="false"）
  logic_discovery_selector_cfg scaling_target = 2;
}

message logic_hpa_cfg {
  logic_hpa_controller controller = 2;
  logic_hpa_metrics metrics = 3;
  logic_hpa_scaling_rule rule = 4;

  // 以下数据为内存模块中设置，不接受配置修改
  logic_hpa_discovery_group_cfg discovery = 101;
}

message logic_dns_cfg {
  google.protobuf.Duration lookup_timeout = 1 [(atapp.protocol.CONFIGURE) = { default_value: "10s" min_value: "1s" }];
}

message logic_localization_cfg {
  string lang = 1;
}

message logic_battle_cfg {
  string etcd_version_path = 1;
  bool ignore_invalid_version = 2;
}

message logic_transaction_cfg {
  google.protobuf.Duration timeout = 1 [(atapp.protocol.CONFIGURE) = { default_value: "10s" min_value: "1s" }];
}

message logic_excel_cfg {
  bool enable = 1;
  bool override_same_version = 2;
  uint32 group_number = 3 [(atapp.protocol.CONFIGURE) = { default_value: "8" }];
  string bindir = 4 [(atapp.protocol.CONFIGURE) = { default_value: "../../resource/excel" }];
}

message logic_section_cfg {
  logic_hpa_cfg hpa = 3;
  logic_localization_cfg localization = 8;
  google.protobuf.Duration remote_configure_update_interval = 24
      [(atapp.protocol.CONFIGURE) = { default_value: "300s" min_value: "60s" }];

  logic_dns_cfg dns = 100;
  logic_server_cfg server = 102;
  logic_user_cfg user = 103;
  logic_session_cfg session = 104;
  logic_task_cfg task = 105;
  logic_heartbeat_cfg heartbeat = 106;
  logic_router_cfg router = 107;
  logic_telemetry_cfg telemetry = 108;
  logic_battle_cfg battle = 109;
  logic_excel_cfg excel = 110;
  logic_transaction_cfg transaction = 111;
}

message db_group_gateway_cfg {
  string url = 1;
  int32 port = 2;
  string host = 3;
}

message db_group_cfg {
  repeated string host = 1;
  repeated db_group_gateway_cfg gateways = 2;
}

message db_script_cfg {
  string login = 101;
  string user = 102;
}

message db_timer_cfg {
  google.protobuf.Duration retry = 1;
  google.protobuf.Duration timeout = 2;
  google.protobuf.Duration proc = 3;
}

message db_section_cfg {
  db_group_cfg cluster = 101;
  db_group_cfg raw = 102;
  db_script_cfg script = 103;
  db_timer_cfg timer = 104;
}

message loginsvr_cfg {
  string version_conf = 1 [(atapp.protocol.CONFIGURE) = { default_value: "../cfg/cfg_version.xml" }];
  string strategy_conf = 2 [(atapp.protocol.CONFIGURE) = { default_value: "../cfg/cfg_strategy.xml" }];
  uint32 debug_platform = 3 [(atapp.protocol.CONFIGURE) = { default_value: "false" }];
  string cdn_url = 4;

  google.protobuf.Timestamp start_time = 11;
  google.protobuf.Timestamp end_time = 12;

  repeated string white_openid_list = 21;

  message gamesvr_ingress_cfg {
    repeated string addr = 1;
    google.protobuf.Duration relogin_expire = 2
        [(atapp.protocol.CONFIGURE) = { default_value: "3600s" min_value: "1" }];
  }
  gamesvr_ingress_cfg gamesvr = 31;
}

message dtcoordsvr_cfg {
  google.protobuf.Duration lru_expired_duration = 1
      [(atapp.protocol.CONFIGURE) = { default_value: "60s" min_value: "1s" }];
  uint32 lru_max_cache_count = 2;

  google.protobuf.Duration transaction_default_timeout = 11
      [(atapp.protocol.CONFIGURE) = { default_value: "10s" min_value: "1s" }];
}

message server_cfg {
  logic_section_cfg logic = 101;
  db_section_cfg db = 102;

  loginsvr_cfg loginsvr = 201;
  dtcoordsvr_cfg dtcoordsvr = 202;
}
