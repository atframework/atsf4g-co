#!/bin/bash

cd "$(dirname "$0")";

IGNORE_RUNNING_DYNAMIC_LIBRARIES=0

while getopts "hi" OPTION; do
  case $OPTION in
    i)
      IGNORE_RUNNING_DYNAMIC_LIBRARIES=1
      ;;
    h)
      echo "usage: $0 [options...]"
      echo "options:"
      echo "-h                            help message."
      echo "-i                            ignore running dynamic library checking."
      exit 0
      ;;
    ?)
      echo "unkonw argument detected"
      exit 1
      ;;
  esac
done

DEPLOYED_SHORT_SHA=($(find . -name "package-version.txt" | xargs grep vcs_short_sha | awk '{print $NF}' | sort -u))

function has_deploy_sha() {
    for SHORT_SHA in ${DEPLOYED_SHORT_SHA[@]}; do
        if [ "$SHORT_SHA" == "$1" ]; then
            echo "1"
            return
        fi
    done
    echo "0"
}

function cleanup_dir() {
    if [[ ! -e $1 ]]; then
        return 0;
    fi

    for DIR_PATH in "$1"/* ; do
        DIR_NAME="$(basename "$DIR_PATH")";
        if [[ "$DIR_NAME" == "@SERVER_FRAME_VCS_COMMIT_SHORT_SHA@" ]]; then
            continue;
        fi

        if [ $(has_deploy_sha $DIR_NAME) == "1" ]; then
            continue;
        fi

        if [[ ! -d "$1/$DIR_NAME" ]]; then
            echo "nohup rm -rf \"$1/$DIR_NAME\" &"
            nohup rm -rf "$1/$DIR_NAME" &
            continue
        fi

        which lsof > /dev/null 2>&1;
        if [[ ! $? -eq 0 ]]; then
            echo "nohup rm -rf \"$1/$DIR_NAME\" &"
            nohup rm -rf "$1/$DIR_NAME" &
            continue
        fi

        if [[ $IGNORE_RUNNING_DYNAMIC_LIBRARIES -eq 0 ]]; then
            for SO_PATH in "$1/$DIR_NAME"/*.so* ; do
                SO_NAME="$(basename "$SO_PATH")";
                lsof "$1/$DIR_NAME/$SO_NAME" 2>/dev/null;
                if [[ $? -ne 0 ]]; then
                    rm -rfv "$1/$DIR_NAME/$SO_NAME";
                fi
            done
            HAS_SO=$(find "$1/$DIR_NAME" -name '*.so*' -type f | wc | awk '{print $1}') ;
        else
            HAS_SO=0
        fi
        if [[ $HAS_SO -eq 0 ]]; then
            echo "nohup rm -rf \"$1/$DIR_NAME\" &"
            nohup rm -rf "$1/$DIR_NAME" &
        fi
    done
}

cleanup_dir lib ;
cleanup_dir lib64 ;
