# ============ export - [...] ============
get_filename_component(EXPORT_SRC_BIN_NAME ${CMAKE_CURRENT_LIST_DIR} NAME_WE)
if(WIN32
   AND NOT MINGW
   AND NOT CYGWIN)
  set(EXPORT_SRC_BIN_NAME ${EXPORT_LIBATGW_INNER_V1_C_BIN_NAME})
else()
  set(EXPORT_SRC_BIN_NAME ${EXPORT_LIBATGW_INNER_V1_C_BIN_NAME})
endif()

echowithcolor(COLOR GREEN "-- Configure ${EXPORT_SRC_BIN_NAME} on ${CMAKE_CURRENT_LIST_DIR}")

aux_source_directory(${CMAKE_CURRENT_LIST_DIR} EXPORT_SRC_LIST)

unset(EXPORT_TARGET_PUBLIC_LINK_NAMES)
unset(EXPORT_TARGET_PUBLIC_INCLUDE_DIRS)
unset(EXPORT_TARGET_PUBLIC_DEFINITIONS)

# special setting for libatgw_inner_v1_c
list(APPEND EXPORT_TARGET_PUBLIC_DEFINITIONS ATBUS_MACRO_MSG_LIMIT=${ATBUS_MACRO_MSG_LIMIT})

list(APPEND EXPORT_SRC_LIST ${ATFRAMEWORK_SERVICE_GATEWAY_PROTOCOL_DIR}/proto_base.cpp)
list(APPEND EXPORT_SRC_LIST ${ATFRAMEWORK_SERVICE_GATEWAY_PROTOCOL_DIR}/inner_v1/libatgw_proto_inner.cpp)

set(EXPORT_SOURCE_DIR "${PROJECT_BINARY_DIR}/export/${EXPORT_SRC_BIN_NAME}")
set(EXPORT_SOURCE_INC_DIR "${EXPORT_SOURCE_DIR}/include")
set(EXPORT_SOURCE_SRC_DIR "${EXPORT_SOURCE_DIR}/src")
file(MAKE_DIRECTORY ${EXPORT_SOURCE_INC_DIR})
file(MAKE_DIRECTORY ${EXPORT_SOURCE_SRC_DIR})

# ----- copy dependency atgateway protocol files -----
file(
  COPY "${ATFRAMEWORK_SERVICE_GATEWAY_PROTOCOL_DIR}"
  DESTINATION ${EXPORT_SOURCE_SRC_DIR}
  USE_SOURCE_PERMISSIONS FILES_MATCHING
  PATTERN "*.h")

file(
  COPY "${ATFRAMEWORK_SERVICE_GATEWAY_PROTOCOL_DIR}"
  DESTINATION ${EXPORT_SOURCE_SRC_DIR}
  USE_SOURCE_PERMISSIONS FILES_MATCHING
  PATTERN "*.cpp")

# ----- copy this project's files -----
file(
  COPY "${CMAKE_CURRENT_LIST_DIR}/libatgw_inner_v1_c.h"
  DESTINATION ${EXPORT_SOURCE_INC_DIR}
  USE_SOURCE_PERMISSIONS)

file(
  COPY "${CMAKE_CURRENT_LIST_DIR}/libatgw_inner_v1_c.cpp"
  DESTINATION ${EXPORT_SOURCE_SRC_DIR}
  USE_SOURCE_PERMISSIONS)

# ----- copy cmake files -----
file(
  COPY "${CMAKE_CURRENT_LIST_DIR}/CMakeLists.export.txt"
  DESTINATION ${EXPORT_SOURCE_DIR}
  USE_SOURCE_PERMISSIONS)
file(RENAME "${EXPORT_SOURCE_DIR}/CMakeLists.export.txt" "${EXPORT_SOURCE_DIR}/CMakeLists.txt")

if(NOT CMAKE_SYSTEM_NAME MATCHES "Windows|MinGW|WindowsStore" AND (BUILD_SHARED_LIBS OR ATFRAMEWORK_USE_DYNAMIC_LIBRARY
                                                                  ))
  add_library(${EXPORT_SRC_BIN_NAME} SHARED ${EXPORT_SRC_LIST})
  set_target_properties(
    ${EXPORT_SRC_BIN_NAME}
    PROPERTIES C_VISIBILITY_PRESET "hidden"
               CXX_VISIBILITY_PRESET "hidden"
               VERSION ${ATFRAMEWORK_SERVICE_GATEWAY_VERSION}
               SOVERSION ${ATFRAMEWORK_SERVICE_GATEWAY_VERSION})
else()
  add_library(${EXPORT_SRC_BIN_NAME} STATIC ${EXPORT_SRC_LIST})
  set_target_properties(
    ${EXPORT_SRC_BIN_NAME}
    PROPERTIES C_VISIBILITY_PRESET "hidden"
               CXX_VISIBILITY_PRESET "hidden"
               VERSION ${ATFRAMEWORK_SERVICE_GATEWAY_VERSION})
endif()

list(APPEND EXPORT_TARGET_PUBLIC_LINK_NAMES ${ATFRAMEWORK_LIBATBUS_LINK_NAME} ${ATFRAMEWORK_ATFRAME_UTILS_LINK_NAME}
     ${ATFRAMEWORK_SERVICE_COMPONENT_LINK_NAME})

if(WIN32)
  list(APPEND EXPORT_TARGET_PUBLIC_LINK_NAMES psapi)
endif()

target_link_libraries(${EXPORT_SRC_BIN_NAME} PUBLIC ${EXPORT_TARGET_PUBLIC_LINK_NAMES})

target_compile_options(${EXPORT_SRC_BIN_NAME} PRIVATE ${ATFRAMEWORK_EXPORT_PRIVATE_OPTIONS})

target_include_directories(
  ${EXPORT_SRC_BIN_NAME}
  PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}>" "$<BUILD_INTERFACE:${ATFRAMEWORK_SERVICE_GATEWAY_PROTOCOL_DIR}>"
         "$<BUILD_INTERFACE:${ATFRAMEWORK_SERVICE_COMPONENT_DIR}>" "$<INSTALL_INTERFACE:include>"
  PRIVATE "$<BUILD_INTERFACE:${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PUBLIC_INCLUDE_DIRS}>")

target_compile_definitions(${EXPORT_SRC_BIN_NAME} PUBLIC ${EXPORT_TARGET_PUBLIC_DEFINITIONS})

set_property(TARGET ${EXPORT_SRC_BIN_NAME} PROPERTY FOLDER "atframework/export")

install(
  TARGETS ${EXPORT_SRC_BIN_NAME}
  EXPORT "${EXPORT_SRC_BIN_NAME}-target"
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})

export(
  TARGETS ${EXPORT_SRC_BIN_NAME}
  NAMESPACE "atframework::"
  FILE "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/cmake/${EXPORT_SRC_BIN_NAME}-target.cmake")

install(
  EXPORT "${EXPORT_SRC_BIN_NAME}-target"
  NAMESPACE "atframework::"
  DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake")
