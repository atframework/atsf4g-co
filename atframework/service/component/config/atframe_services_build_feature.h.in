// Copyright 2021 atframework
// cmake template file

#pragma once

#include <config/compile_optimize.h>
#include <config/compiler_features.h>

#cmakedefine ATFRAME_GATEWAY_MACRO_DATA_SMALL_SIZE @ATFRAME_GATEWAY_MACRO_DATA_SMALL_SIZE@

#ifndef ATFRAME_SERVICE_COMPONENT_MACRO_API
#  if defined(ATFRAME_SERVICE_COMPONENT_MACRO_API_NATIVE) && ATFRAME_SERVICE_COMPONENT_MACRO_API_NATIVE
#    if defined(ATFRAME_SERVICE_COMPONENT_MACRO_API_DLL) && ATFRAME_SERVICE_COMPONENT_MACRO_API_DLL
#      define ATFRAME_SERVICE_COMPONENT_MACRO_API UTIL_SYMBOL_EXPORT
#    else
#      define ATFRAME_SERVICE_COMPONENT_MACRO_API
#    endif
#  else
#    if defined(ATFRAME_SERVICE_COMPONENT_MACRO_API_DLL) && ATFRAME_SERVICE_COMPONENT_MACRO_API_DLL
#      define ATFRAME_SERVICE_COMPONENT_MACRO_API UTIL_SYMBOL_IMPORT
#    else
#      define ATFRAME_SERVICE_COMPONENT_MACRO_API
#    endif
#  endif
#endif

#define ATFRAME_SERVICE_COMPONENT_MACRO_API_HEAD_ONLY UTIL_SYMBOL_VISIBLE
#define ATFRAME_SERVICE_COMPONENT_MACRO_API_C(R) extern "C" ATFRAME_SERVICE_COMPONENT_MACRO_API R __cdecl

#ifndef ATFRAMEWORK_NAMESPACE_SHORT_ALIAS
#  define ATFRAMEWORK_NAMESPACE_SHORT_ALIAS
namespace atframework {}
namespace atfw = atframework;
#endif
