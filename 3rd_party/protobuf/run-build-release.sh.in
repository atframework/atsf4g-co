#!/bin/bash

BUILD_3RD_PARTY_PROTOBUF_BUILD_DIR="@CMAKE_CURRENT_BINARY_DIR@/deps/protobuf-@3RD_PARTY_PROTOBUF_VERSION@/build_jobs_dir_@PROJECT_PREBUILT_PLATFORM_NAME@" ;
BUILD_3RD_PARTY_PROTOBUF_HOST_BUILD_DIR="@CMAKE_CURRENT_BINARY_DIR@/deps/protobuf-@3RD_PARTY_PROTOBUF_VERSION@/build_jobs_dir_@PROJECT_PREBUILT_HOST_PLATFORM_NAME@" ;

# build host protoc first
if [ "@PROJECT_PREBUILT_PLATFORM_NAME@" != "@PROJECT_PREBUILT_HOST_PLATFORM_NAME@" ]; then
    export PATH="$BUILD_3RD_PARTY_PROTOBUF_HOST_BUILD_DIR:$PATH" ;

    if [ ! -e "$BUILD_3RD_PARTY_PROTOBUF_HOST_BUILD_DIR" ]; then
        mkdir -p "$BUILD_3RD_PARTY_PROTOBUF_HOST_BUILD_DIR" ;    
    fi

    cd "$BUILD_3RD_PARTY_PROTOBUF_HOST_BUILD_DIR" ;

    if [ ! -e "@3RD_PARTY_PROTOBUF_HOST_ROOT_DIR@/bin/protoc" ] && [ ! -e "@3RD_PARTY_PROTOBUF_HOST_ROOT_DIR@/bin/protoc.exe" ]; then

        @3RD_PARTY_PROTOBUF_HOST_BUILD_FLAGS_CMD@ "-DCMAKE_INSTALL_PREFIX=@3RD_PARTY_PROTOBUF_HOST_ROOT_DIR@" ;

        @CMAKE_COMMAND@ --build . --target install --config Release @3RD_PARTY_PROTOBUF_BUILD_MULTI_CORE@ ;

    fi

else
    export PATH="$BUILD_3RD_PARTY_PROTOBUF_BUILD_DIR:$PATH" ;
fi

if [ ! -e "$BUILD_3RD_PARTY_PROTOBUF_BUILD_DIR" ]; then
    mkdir -p "$BUILD_3RD_PARTY_PROTOBUF_BUILD_DIR" ;    
fi

cd "$BUILD_3RD_PARTY_PROTOBUF_BUILD_DIR" ;

if [ "@PROJECT_PREBUILT_PLATFORM_NAME@" != "@PROJECT_PREBUILT_HOST_PLATFORM_NAME@" ]; then

    @3RD_PARTY_PROTOBUF_BUILD_FLAGS_CMD@ "-DCMAKE_INSTALL_PREFIX=@3RD_PARTY_PROTOBUF_ROOT_DIR@" -Dprotobuf_BUILD_CONFORMANCE=OFF -Dprotobuf_BUILD_PROTOC_BINARIES=OFF ;

else

    @3RD_PARTY_PROTOBUF_BUILD_FLAGS_CMD@ "-DCMAKE_INSTALL_PREFIX=@3RD_PARTY_PROTOBUF_ROOT_DIR@" ;

fi

@CMAKE_COMMAND@ --build . --target install --config Release @3RD_PARTY_PROTOBUF_BUILD_MULTI_CORE@ ;

